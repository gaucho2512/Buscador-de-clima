{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Documents\\\\REACT\\\\Curso React Juan de la Torre Valdez\\\\buscador-de-clima\\\\src\\\\context\\\\ClimaProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClimaContext = /*#__PURE__*/createContext();\n\nconst ClimaProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [cargando, setCargando] = useState(false);\n  const [noResultado, setNoResultado] = useState('');\n  const [resultado, setresultado] = useState({});\n  const [busqueda, setBusqueda] = useState({\n    ciudad: \"\",\n    pais: \"\"\n  });\n\n  const datosBusqueda = e => {\n    setBusqueda({ ...busqueda,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const consultarClima = async datos => {\n    setCargando(true);\n\n    try {\n      const {\n        ciudad,\n        pais\n      } = datos;\n      const appId = '3313ef7bad42b7737e753840e7e503dc';\n      const url = `http://api.openweathermap.org/geo/1.0/direct?q=${ciudad},${pais}&limit=1&appid=${appId}`;\n      const resultado = await axios(url);\n      const {\n        data\n      } = await axios(url);\n      const {\n        lat,\n        lon\n      } = data[0];\n      const urlClima = `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${appId}`;\n      const {\n        data: clima\n      } = await axios(urlClima);\n      setresultado(clima);\n      setCargando(false);\n    } catch (error) {\n      setNoResultado('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClimaContext.Provider, {\n    value: {\n      busqueda,\n      setBusqueda,\n      datosBusqueda,\n      consultarClima,\n      resultado,\n      cargando,\n      setCargando,\n      noResultado\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ClimaProvider, \"356fE2CJEzk5fjKJl+5ccDellmA=\");\n\n_c = ClimaProvider;\nexport { ClimaProvider };\nexport default ClimaContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClimaProvider\");","map":{"version":3,"sources":["C:/Users/Juan/Documents/REACT/Curso React Juan de la Torre Valdez/buscador-de-clima/src/context/ClimaProvider.jsx"],"names":["useState","createContext","axios","ClimaContext","ClimaProvider","children","cargando","setCargando","noResultado","setNoResultado","resultado","setresultado","busqueda","setBusqueda","ciudad","pais","datosBusqueda","e","target","name","value","consultarClima","datos","appId","url","data","lat","lon","urlClima","clima","error"],"mappings":";;;AAAA,SAASA,QAAT,EAAoBC,aAApB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,gBAAGF,aAAa,EAAlC;;AAGA,MAAMG,aAAa,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEpC,QAAM,CAACC,QAAD,EAAYC,WAAZ,IAA2BP,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAAEQ,WAAF,EAAgBC,cAAhB,IAAmCT,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACU,SAAD,EAAaC,YAAb,IAA6BX,QAAQ,CAAC,EAAD,CAA3C;AAIA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AACjCc,IAAAA,MAAM,EAAE,EADyB;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAAD,CAAxC;;AAKA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACvBJ,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkBF,CAAC,CAACC,MAAF,CAASE;AAFjB,KAAD,CAAX;AAIL,GALD;;AAOA,QAAMC,cAAc,GAAG,MAAOC,KAAP,IAAiB;AAClCf,IAAAA,WAAW,CAAC,IAAD,CAAX;;AACF,QAAI;AAEF,YAAM;AAAEO,QAAAA,MAAF;AAAWC,QAAAA;AAAX,UAAoBO,KAA1B;AACA,YAAMC,KAAK,GAAG,kCAAd;AAEA,YAAMC,GAAG,GAAI,kDAAiDV,MAAO,IAAGC,IAAK,kBAAiBQ,KAAM,EAApG;AACA,YAAMb,SAAS,GAAG,MAAMR,KAAK,CAACsB,GAAD,CAA7B;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMvB,KAAK,CAACsB,GAAD,CAA5B;AACA,YAAM;AAAEE,QAAAA,GAAF;AAAQC,QAAAA;AAAR,UAAgBF,IAAI,CAAC,CAAD,CAA1B;AAEA,YAAMG,QAAQ,GAAK,sDAAqDF,GAAI,QAAOC,GAAI,UAASJ,KAAM,EAAtG;AAEA,YAAM;AAAEE,QAAAA,IAAI,EAAEI;AAAR,UAAkB,MAAM3B,KAAK,CAAC0B,QAAD,CAAnC;AACAjB,MAAAA,YAAY,CAACkB,KAAD,CAAZ;AACAtB,MAAAA,WAAW,CAAC,KAAD,CAAX;AAGD,KAlBD,CAkBE,OAAOuB,KAAP,EAAc;AACdrB,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACJ,GAvBD;;AAyBA,sBAEM,QAAC,YAAD,CAAc,QAAd;AACM,IAAA,KAAK,EAAE;AACLG,MAAAA,QADK;AAELC,MAAAA,WAFK;AAGLG,MAAAA,aAHK;AAILK,MAAAA,cAJK;AAKLX,MAAAA,SALK;AAMLJ,MAAAA,QANK;AAOLC,MAAAA,WAPK;AAQLC,MAAAA;AARK,KADb;AAAA,cAYIH;AAZJ;AAAA;AAAA;AAAA;AAAA,UAFN;AAkBD,CA/DD;;GAAMD,a;;KAAAA,a;AAiEN,SACEA,aADF;AAIA,eAAeD,YAAf","sourcesContent":["import { useState , createContext } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst ClimaContext = createContext()\r\n\r\n\r\nconst ClimaProvider = ({children}) => {\r\n\r\n  const [cargando , setCargando] = useState(false)\r\n  const [ noResultado , setNoResultado ] = useState('')\r\n  const [resultado , setresultado] = useState({\r\n\r\n  })\r\n\r\n  const [busqueda, setBusqueda] = useState({\r\n          ciudad: \"\",\r\n          pais: \"\",\r\n  })\r\n\r\n  const datosBusqueda = (e) => {\r\n        setBusqueda({\r\n          ...busqueda ,\r\n          [e.target.name] : e.target.value\r\n        })\r\n  }\r\n\r\n  const consultarClima = async (datos) => {\r\n        setCargando(true)\r\n      try {\r\n\r\n        const { ciudad , pais } = datos\r\n        const appId = '3313ef7bad42b7737e753840e7e503dc'\r\n\r\n        const url = `http://api.openweathermap.org/geo/1.0/direct?q=${ciudad},${pais}&limit=1&appid=${appId}`\r\n        const resultado = await axios(url)\r\n\r\n        const { data } = await axios(url)\r\n        const { lat , lon } = data[0]\r\n\r\n        const urlClima =  `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${appId}`\r\n\r\n        const { data: clima } = await axios(urlClima)\r\n        setresultado(clima);\r\n        setCargando(false)\r\n\r\n\r\n      } catch (error) {\r\n        setNoResultado('')\r\n      }\r\n  }\r\n\r\n  return (\r\n\r\n        <ClimaContext.Provider\r\n              value={{\r\n                busqueda,\r\n                setBusqueda,\r\n                datosBusqueda,\r\n                consultarClima,\r\n                resultado,\r\n                cargando,\r\n                setCargando,\r\n                noResultado\r\n              }}\r\n        >\r\n           {children}\r\n        </ClimaContext.Provider>\r\n\r\n  )\r\n}\r\n\r\nexport {\r\n  ClimaProvider\r\n} \r\n\r\nexport default ClimaContext"]},"metadata":{},"sourceType":"module"}